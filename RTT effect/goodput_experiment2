#!/bin/bash

# Define parameters
LOSS_VALUES=(1 3 5)           # Packet loss percentages to test
DELAYS=(10 100 300)         # RTT delays to test (in ms)
NUM_RUNS=20                   # Number of repetitions for each combination
OUTPUT_FILE="goodput_results2.csv"  # Output file to save the results
IPERF_SERVER="10.0.5.1"       # Server IP for iperf3 test
INTERFACE="eth0"              # Network interface for `tc` commands

# Initialize output file
echo "Delay(ms) Loss(%) Average_Goodput(Mbps) Std_Dev(Mbps)" > "$OUTPUT_FILE"

# Main loop for each delay value
for DELAY in "${DELAYS[@]}"; do
    echo "Setting delay: ${DELAY}ms"
    sudo tc qdisc change dev $INTERFACE root netem delay ${DELAY}ms  # Set RTT delay
    
    # Test each loss value with the current delay
    for LOSS in "${LOSS_VALUES[@]}"; do
        echo "Testing with packet loss: $LOSS%"
        sudo tc qdisc change dev $INTERFACE root netem delay ${DELAY}ms loss ${LOSS}%  # Set delay and loss
        
        # Run iperf3 multiple times and collect goodput
        GOODPUTS=()
        for ((i = 1; i <= NUM_RUNS; i++)); do
            echo "Run $i for delay ${DELAY}ms and loss ${LOSS}%..."
            
            # Extract the receiver bitrate
            RESULT=$(iperf3 -c $IPERF_SERVER | grep "receiver" | awk '{print $(NF-2)}')
            
            # Verify extraction and store the value
            if [[ -n "$RESULT" ]]; then  # Check if RESULT is not empty
                GOODPUTS+=($RESULT)
                echo "Goodput for run $i: $RESULT Mbps"  # Optional debug output
            else
                echo "Error: No goodput value extracted for run $i"
            fi
        done
        
        # Calculate average and standard deviation
        if [[ ${#GOODPUTS[@]} -gt 0 ]]; then  # Only calculate if GOODPUTS is not empty
            AVG=$(printf "%s\n" "${GOODPUTS[@]}" | awk '{sum+=$1} END {printf "%.2f", sum/NR}')
            STD_DEV=$(printf "%s\n" "${GOODPUTS[@]}" | awk -v avg="$AVG" '{sum+=($1-avg)^2} END {printf "%.2f", sqrt(sum/NR)}')
        else
            AVG=0
            STD_DEV=0
        fi
        
        # Save results to file
        echo "${DELAY} ${LOSS} ${AVG} ${STD_DEV}" >> "$OUTPUT_FILE"
    done
done

# Reset the packet loss and delay to default at the end
sudo tc qdisc change dev $INTERFACE root netem delay 0ms loss 0%

echo "Experiment completed. Results saved to $OUTPUT_FILE"
